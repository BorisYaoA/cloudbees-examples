#!/bin/bash

#This script is used to test the command instructions from README.md
declare -a mandatory
mandatory=(
  GCP_ZONE
  GCP_PROJECT
  GKE_CLUSTER_NAME
  GKE_CLUSTER_NUM_NODES
  GKE_CLUSTER_MACHINE_TYPE
  HELM_RELEASE
  NAMESPACE
)

check_variables() {
  MISSING=false
  for var in "${mandatory[@]}"; do
    [[ -z "${!var:-}" ]] && {
      echo "${RED}Environment variable $var must be set${NC}"
      MISSING=true
    }
  done
  [[ "$MISSING" == true ]] && exit 1
}

check_variables

# Create gke cluster
echo "Creating GKE cluster"
gcloud container clusters create "$GKE_CLUSTER_NAME" \
      --project="$GCP_PROJECT" \
      --num-nodes="$GKE_CLUSTER_NUM_NODES" \
      --machine-type="$GKE_CLUSTER_MACHINE_TYPE" \
      --addons=GcePersistentDiskCsiDriver \
      --zone="$GCP_ZONE"

# Download demo values file
echo "Downloading demo values file"
curl -fsSL -o cloudbees-cd-demo.yaml https://raw.githubusercontent.com/cloudbees/cloudbees-examples/master/cloudbees-cd/kubernetes/cloudbees-cd-demo.yaml

# Install CloudBees CD Server
echo "Installing CloudBees CD Server"
helm repo add cloudbees https://charts.cloudbees.com/public/cloudbees
helm repo update
helm install "$HELM_RELEASE" cloudbees/cloudbees-flow \
      --namespace "$NAMESPACE" \
      --create-namespace \
      --values cloudbees-cd-demo.yaml \
      --wait --timeout 4200s

# Print the CD Server URL
LB_HOSTIP=$(kubectl get service "$HELM_RELEASE"-ingress-nginx-controller -n "$NAMESPACE" -o jsonpath="{.status.loadBalancer.ingress[0].ip}")
echo "Available at: https://$LB_HOSTIP/flow/"

# Print the CD Server admin password
echo "Admin password: $(kubectl get secret "$HELM_RELEASE"-cloudbees-flow-credentials \
 -n "$NAMESPACE" -o jsonpath="{.data.CBF_SERVER_ADMIN_PASSWORD}" | base64 --decode ; echo)"

# Install CloudBees CD Agent
echo "Installing CloudBees CD Agent"

#Download the agent values file
curl -fsSL -o cloudbees-cd-agent-example.yaml https://raw.githubusercontent.com/cloudbees/cloudbees-examples/master/cloudbees-cd/kubernetes/cloudbees-cd-agent-example.yaml

#Install the agents
helm install "$HELM_RELEASE"-agents cloudbees/cloudbees-flow-agent \
      --namespace "$NAMESPACE" \
      --values cloudbees-cd-agent-example.yaml \
      --set flowCredentials.existingSecret="$HELM_RELEASE"-cloudbees-flow-credentials \
      --wait --timeout 1000s