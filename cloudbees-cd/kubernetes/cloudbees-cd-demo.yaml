demoMode: true

##---------------------------------------------
## Flow storage configuration section
##---------------------------------------------

storage:
  volumes:
    serverPlugins:
      accessMode: ReadWriteOnce
      # Storage class for plugins directory. Currently it has to be shared across server and web replicas.
      # Server and web are co-located using hard affinity rule for demoMode. StorageClass is null here to ensure the same behavior across all cloud providers
      # (it forces storage class to fall back to  "default" disk based ReadWriteOnce platform specific storage class)
      storageClass: null
      storage: 5Gi

    repositoryStorage:
      storage: 10Gi

##---------------------------------------------
## Flow components/workloads configuration section
##---------------------------------------------
server:
  resources:
    limits:
      cpu: 1.5
    requests:
      cpu: 0.5

# No zookeeper for demo mode
zookeeper:
  enabled: false

# clusteredMode has to be false to be able to use mariadb
clusteredMode: false

# Install mariadb chart for demo mode 
# and create a database and user for Flow to use. 
# Note that the database user name and password 
# specified in the `mariadb.db.user` and `mariadb.rootUser.password` value must
# match the values in the `database` section below.

mariadb:
  enabled: true
  fullnameOverride: mariadb
  replication:
    enabled: false
  securityContext:
    enabled: true
  volumePermissions:
    enabled: true
  db:
    user: "flow"
  rootUser:
    password: "flow_pass"

database:
  dbName: "demo"
  dbUser: "flow"
  dbPassword: "flow_pass"
  dbType: "mariadb"
  dbPort: 3306
  clusterEndpoint: "mariadb"

##---------------------------------------------
## Flow server admin credentials section
##---------------------------------------------

flowCredentials:
  ## Name of the secret containing the admin user password to use. If set, the admin user password
  ## will be read from the secret instead of the plain-text `adminPassword` (not recommended for production).
  ##
  ## The data field must contain base64 encoded value for key 'CBF_SERVER_ADMIN_PASSWORD'.
  ## E.g., kubectl create secret generic flow-admin-secret --from-literal=CBF_SERVER_ADMIN_PASSWORD='rrx!*d$z75Dsb'
  ##
  ## Uncomment the following line to set the name of the secret to use to read the admin user password.
  # existingSecret: flow-admin-secret
  ##
  ## IMPORTANT: This is clearly not meant for production use and is only meant for demo environments
  ## where security may not be a concern. Use of `existingSecret` is preferred.
  adminPassword: changeme

